{
  "Simple Vue Template for TypeScript": {
    "scope": "vue",
    "prefix": "vueTsSimple",
    "body": [
      "<template>",
      "  ${0}",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { Vue, Component } from \"vue-property-decorator\"",
      "",
      "@Component",
      "export default class $TM_FILENAME_BASE extends Vue {}",
      "</script>",
      ""
    ],
    "description": "Simple Vue Template for TypeScript"
  },
  "Extended Vue Template for TypeScript": {
    "scope": "vue",
    "prefix": "vueTsExtended",
    "body": [
      "<template>",
      "  ${0}",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { Vue, Component, Prop } from \"vue-property-decorator\"",
      "",
      "@Component({ components: {} })",
      "export default class $TM_FILENAME_BASE extends Vue {",
      "  // props",
      "  @Prop({ type: Boolean, default: false }) readonly isButton?: Boolean",
      "",
      "  // data",
      "  message = \"Hello\"",
      "",
      "  // computed",
      "  get reverseMessage() {",
      "    return this.message",
      "      .split(\"\")",
      "      .reverse()",
      "      .join(\"\")",
      "  }",
      "",
      "  // method",
      "  changeMessage() {",
      "    this.message = \"Good bye\"",
      "  }",
      "",
      "  // Lifecycle hooks",
      "  created() {}",
      "  mounted() {}",
      "  updated() {}",
      "  destroyed() {}",
      "}",
      "</script>",
      ""
    ],
    "description": "Extended Vue Template for TypeScript"
  }
}
